{"version":3,"file":"pixi-layers.js","sourceRoot":"","sources":["../src/ContainerMixin.ts","../src/DisplayObjectMixin.ts","../src/Group.ts","../src/InteractionManagerMixin.ts","../src/Layer.ts","../src/LayersTreeSearch.ts","../src/Stage.ts","../src/renderers.ts","../src/xporter.ts"],"names":[],"mappings":"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","sourcesContent":["declare namespace PIXI {\n    export interface Container {\n        containerRenderWebGL?(renderer: Renderer): void;\n    }\n}\n\nnamespace pixi_display {\n    (Object as any).assign(PIXI.Container.prototype, {\n        render: function (renderer: PIXI.Renderer): void {\n            if (this._activeParentLayer && this._activeParentLayer != renderer._activeLayer) {\n                return;\n            }\n\n            if (!this.visible) {\n                this.displayOrder = 0;\n                return;\n            }\n\n            this.displayOrder = renderer.incDisplayOrder();\n\n            // if the object is not visible or the alpha is 0 then no need to render this element\n            if (this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n\n\t        renderer._activeLayer = null;\n            this.containerRenderWebGL(renderer);\n\t        renderer._activeLayer = this._activeParentLayer;\n        },\n        renderCanvas: function (renderer: PIXI.CanvasRenderer): void {\n            if (this._activeParentLayer && this._activeParentLayer != renderer._activeLayer) {\n                return;\n            }\n\n            if (!this.visible) {\n                this.displayOrder = 0;\n                return;\n            }\n\n            this.displayOrder = renderer.incDisplayOrder();\n\n            // if the object is not visible or the alpha is 0 then no need to render this element\n            if (this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n\n\t        renderer._activeLayer = null;\n            this.containerRenderCanvas(renderer);\n\t        renderer._activeLayer = this._activeParentLayer;\n        },\n        containerRenderWebGL: PIXI.Container.prototype.render,\n        containerRenderCanvas: (PIXI.Container as any).prototype.renderCanvas\n    });\n}","declare namespace PIXI {\n    export interface DisplayObject {\n        parentGroup: pixi_display.Group,\n\n        /**\n         * Object will be rendered\n         *\n         * please specify it to handle zOrder and zIndex\n         *\n         * its always null for layers\n         *\n         */\n        parentLayer?: pixi_display.Layer,\n\n\n        _activeParentLayer?: pixi_display.Layer,\n        /**\n         * zOrder is used to sort element inside the layer\n         * It can be used with zIndex together: First PixiJS v5 sorts elements by zIndex inside a container,\n         * then pixi-layers plugin sorts by zOrder inside a layer.\n         */\n        zOrder?: number,\n\n        /**\n         * updateOrder is calculated by DisplayList, it is required for sorting inside DisplayGroup\n         */\n        updateOrder?: number,\n\n        /**\n         * displayOrder is calculated by render, it is required for interaction\n         */\n        displayOrder?: number,\n\n        /**\n         * Stage will look inside for elements that can be re-arranged, if this flag is true\n         * Make it false for ParticleContainer\n         */\n        layerableChildren?: boolean\n\n\t    /**\n\t     * is Layer\n\t     */\n\t    isLayer?: boolean;\n\n\t    containsPoint?(p: PIXI.IPoint): boolean;\n    }\n}\n\n(Object as any).assign(PIXI.DisplayObject.prototype, {\n    parentLayer: null,\n    _activeParentLayer: null,\n    parentGroup: null,\n    zOrder: 0,\n    zIndex: 0,\n    updateOrder: 0,\n    displayOrder: 0,\n    layerableChildren: true,\n\tisLayer: false\n});\n\nif (PIXI.ParticleContainer) {\n    PIXI.ParticleContainer.prototype.layerableChildren = false;\n}\nelse if ((PIXI as any).ParticleContainer) {\n    (PIXI as any).ParticleContainer.prototype.layerableChildren = false;\n}\n","/**\n * A shared component for multiple DisplayObject's allows to specify rendering order for them\n *\n * @class\n * @extends EventEmitter\n * @memberof PIXI\n * @param zIndex {number} z-index for display group\n * @param sorting {boolean | Function} if you need to sort elements inside, please provide function that will set displayObject.zOrder accordingly\n */\n\nnamespace pixi_display {\n    import DisplayObject = PIXI.DisplayObject;\n    import utils = PIXI.utils;\n\n    export class Group extends utils.EventEmitter {\n        static _layerUpdateId = 0;\n\n        _activeLayer: Layer = null;\n\n        _activeStage: Stage = null;\n\n        _activeChildren: Array<DisplayObject> = [];\n\n        _lastUpdateId = -1;\n\n        useRenderTexture: boolean = false;\n        useDoubleBuffer: boolean = false;\n        sortPriority: number = 0;\n        clearColor : ArrayLike<number> = new Float32Array([0, 0, 0, 0]);\n\n        //TODO: handle orphan groups\n        //TODO: handle groups that don't want to be drawn in parent\n        canDrawWithoutLayer = false;\n        canDrawInParentStage = true;\n\n        /**\n         * default zIndex value for layers that are created with this Group\n         * @type {number}\n         */\n        zIndex = 0;\n\n        enableSort = false;\n\n        constructor(zIndex: number, sorting: boolean | Function) {\n            super();\n\n            this.zIndex = zIndex;\n\n            this.enableSort = !!sorting;\n\n            if (typeof sorting === 'function') {\n                this.on('sort', sorting);\n            }\n        }\n\n        _tempResult: Array<DisplayObject> = [];\n        _tempZero: Array<DisplayObject> = [];\n\n        useZeroOptimization: boolean = false;\n\n        doSort(layer: Layer, sorted: Array<DisplayObject>) {\n            if ((this.listeners as any)('sort', true)) {\n                for (let i = 0; i < sorted.length; i++) {\n                    this.emit('sort', sorted[i]);\n                }\n            }\n            if (this.useZeroOptimization) {\n                this.doSortWithZeroOptimization(layer, sorted);\n            } else {\n                sorted.sort(Group.compareZIndex);\n            }\n        }\n\n        static compareZIndex(a: DisplayObject, b: DisplayObject) {\n            if (a.zOrder < b.zOrder) {\n                return -1;\n            }\n            if (a.zOrder > b.zOrder) {\n                return 1;\n            }\n            return a.updateOrder - b.updateOrder;\n        }\n\n        doSortWithZeroOptimization(layer: Layer, sorted: Array<DisplayObject>) {\n            throw new Error(\"not implemented yet\");\n            //default sorting\n            // const result = this._tempResult;\n            // const zero = this._tempZero;\n            // for (let i = 0; i < sorted.length; i++) {\n            //     const elem = sorted[i];\n            //     if (elem.zIndex == 0 && elem.zOrder == 0) {\n            //         zero.push(elem);\n            //     } else {\n            //         result.push(elem);\n            //     }\n            // }\n            // if (zero.length == 0) {\n            //     sorted.sort(Group.compareZOrder);\n            // } else {\n            //     result.sort(Group.compareZOrder);\n            //     let j = 0;\n            //     for (let i = 0; i < result.length; i++) {\n            //         const elem = result[i];\n            //         if (elem.zIndex < 0 && elem.zIndex == 0 && elem.zOrder > 0) {\n            //             sorted[j++] = result[i]++;\n            //         }\n            //     }\n            // }\n        }\n\n        /**\n         * clears temporary variables\n         */\n        clear() {\n            this._activeLayer = null;\n            this._activeStage = null;\n            this._activeChildren.length = 0;\n        }\n\n        /**\n         * used only by displayList before sorting takes place\n         */\n        addDisplayObject(stage: Stage, displayObject: DisplayObject) {\n            this.check(stage);\n            displayObject._activeParentLayer = this._activeLayer;\n            if (this._activeLayer) {\n                this._activeLayer._activeChildren.push(displayObject);\n            } else {\n                this._activeChildren.push(displayObject);\n            }\n        }\n\n        /**\n         * called when corresponding layer is found in current stage\n         * @param stage\n         * @param layer\n         */\n        foundLayer(stage: Stage, layer: Layer) {\n            this.check(stage);\n            if (this._activeLayer != null) {\n                Group.conflict();\n            }\n            this._activeLayer = layer;\n            this._activeStage = stage;\n        }\n\n        /**\n         * called after stage finished the work\n         * @param stage\n         */\n        foundStage(stage: Stage) {\n            if (!this._activeLayer && !this.canDrawInParentStage) {\n                this.clear();\n            }\n        }\n\n        check(stage: Stage) {\n            if (this._lastUpdateId < Group._layerUpdateId) {\n                this._lastUpdateId = Group._layerUpdateId;\n                this.clear();\n                this._activeStage = stage;\n            } else if (this.canDrawInParentStage) {\n                let current = this._activeStage;\n                while (current && current != stage) {\n                    current = current._activeParentStage;\n                }\n                this._activeStage = current;\n                if (current == null) {\n                    this.clear();\n                    return\n                }\n            }\n        }\n\n        static _lastLayerConflict = 0;\n\n        static conflict() {\n            if (Group._lastLayerConflict + 5000 < Date.now()) {\n                Group._lastLayerConflict = Date.now();\n                console.log(\"PIXI-display plugin found two layers with the same group in one stage - that's not healthy. Please place a breakpoint here and debug it\");\n            }\n        }\n    }\n}\n","//TODO: add maxDisplayOrder for displayObjects and use it to speed up the interaction here\n\n/**\n * @mixin\n */\n\nnamespace pixi_display {\n    import DisplayObject = PIXI.DisplayObject;\n    import Point = PIXI.Point;\n    import InteractionEvent = PIXI.InteractionEvent;\n\n    export function processInteractive51(strangeStuff: InteractionEvent | Point, displayObject: DisplayObject, func: Function, hitTest: boolean, interactive: boolean) {\n        if (!this.search) {\n            this.search = new LayersTreeSearch();\n        }\n        this.search.findHit(strangeStuff, displayObject, func, hitTest);\n\n        const delayedEvents = this.delayedEvents;\n\n        if (delayedEvents && delayedEvents.length) {\n            // Reset the propagation hint, because we start deeper in the tree again.\n            (strangeStuff as any).stopPropagationHint = false;\n\n            const delayedLen = delayedEvents.length;\n\n            this.delayedEvents = [];\n\n            for (let i = 0; i < delayedLen; i++) {\n                const {displayObject, eventString, eventData} = delayedEvents[i];\n\n                // When we reach the object we wanted to stop propagating at,\n                // set the propagation hint.\n                if (eventData.stopsPropagatingAt === displayObject) {\n                    eventData.stopPropagationHint = true;\n                }\n\n                this.dispatchEvent(displayObject, eventString, eventData);\n            }\n        }\n    }\n\n    export function patchInteractionManager(interactionManager: any) {\n        if (!interactionManager) {\n            return;\n        }\n        if (interactionManager.search) {\n            if (!interactionManager.search.worksWithDisplay) {\n                interactionManager.search = new LayersTreeSearch();\n            }\n        } else {\n            interactionManager.processInteractive = processInteractive51;\n        }\n    }\n}\n","/**\n * Created by ivanp on 29.01.2017.\n */\n\nnamespace pixi_display {\n    export class LayerTextureCache {\n        constructor(public layer: Layer) {\n        }\n\n        renderTexture: PIXI.RenderTexture = null;\n        doubleBuffer: Array<PIXI.RenderTexture> = null;\n        currentBufferIndex = 0;\n        _tempRenderTarget: PIXI.RenderTexture = null;\n        _tempRenderTargetSource = new PIXI.Rectangle();\n\n        initRenderTexture(renderer?: PIXI.Renderer) {\n            const width = renderer ? renderer.screen.width : 100;\n            const height = renderer ? renderer.screen.height : 100;\n            const resolution = renderer ? renderer.resolution : PIXI.settings.RESOLUTION;\n\n            this.renderTexture = PIXI.RenderTexture.create({width, height, resolution});\n\n            if (this.layer.group.useDoubleBuffer) {\n                this.doubleBuffer = [\n                    PIXI.RenderTexture.create({width, height, resolution}),\n                    PIXI.RenderTexture.create({width, height, resolution})\n                ];\n            }\n        }\n\n        getRenderTexture() {\n            if (!this.renderTexture) {\n                this.initRenderTexture();\n            }\n            return this.renderTexture;\n        }\n\n        pushTexture(renderer: PIXI.Renderer) {\n            const screen = renderer.screen;\n\n            if (!this.renderTexture) {\n                this.initRenderTexture(renderer);\n            }\n\n            const rt = this.renderTexture;\n            const group = this.layer.group;\n            const db = this.doubleBuffer;\n\n            if (rt.width !== screen.width ||\n                rt.height !== screen.height ||\n                rt.baseTexture.resolution !== renderer.resolution) {\n                rt.baseTexture.resolution = renderer.resolution;\n                rt.resize(screen.width, screen.height);\n\n                if (db) {\n                    db[0].baseTexture.resolution = renderer.resolution;\n                    db[0].resize(screen.width, screen.height);\n                    db[1].baseTexture.resolution = renderer.resolution;\n                    db[1].resize(screen.width, screen.height);\n                }\n            }\n\n            this._tempRenderTarget = renderer.renderTexture.current;\n            this._tempRenderTargetSource.copyFrom(renderer.renderTexture.sourceFrame);\n\n            renderer.batch.flush();\n\n            if (group.useDoubleBuffer) {\n                // double-buffer logic\n                let buffer = db[this.currentBufferIndex];\n                if (!(buffer.baseTexture as any)._glTextures[renderer.CONTEXT_UID]) {\n                    renderer.renderTexture.bind(buffer, undefined, undefined);\n                    renderer.texture.bind(buffer);\n                    if (group.clearColor) {\n                        renderer.renderTexture.clear(group.clearColor as any);\n                    }\n                }\n                renderer.texture.unbind(rt.baseTexture);\n                (rt.baseTexture as any)._glTextures = (buffer.baseTexture as any)._glTextures;\n                (rt.baseTexture as any).framebuffer = (buffer.baseTexture as any).framebuffer;\n\n                buffer = db[1 - this.currentBufferIndex];\n                renderer.renderTexture.bind(buffer, undefined, undefined);\n            } else {\n                // simple logic\n                renderer.renderTexture.bind(rt, undefined, undefined);\n            }\n\n            if (group.clearColor) {\n                renderer.renderTexture.clear(group.clearColor as any);\n            }\n\n            // fix for filters\n            const filterStack = renderer.filter.defaultFilterStack;\n            if (filterStack.length > 1) {\n                filterStack[filterStack.length - 1].renderTexture = renderer.renderTexture.current;\n            }\n        }\n\n        popTexture(renderer: PIXI.Renderer) {\n            renderer.batch.flush();\n            // switch filters back\n            const filterStack = renderer.filter.defaultFilterStack;\n            if (filterStack.length > 1) {\n                filterStack[filterStack.length - 1].renderTexture = this._tempRenderTarget;\n            }\n            renderer.renderTexture.bind(this._tempRenderTarget, this._tempRenderTargetSource, undefined);\n            this._tempRenderTarget = null;\n\n\t        const rt = this.renderTexture;\n\t        const group = this.layer.group;\n\t        const db = this.doubleBuffer;\n\n\t        if (group.useDoubleBuffer) {\n\t\t        renderer.texture.unbind(rt.baseTexture);\n\t\t        this.currentBufferIndex = 1 - this.currentBufferIndex;\n\t\t        let buffer = db[this.currentBufferIndex];\n\t\t        (rt.baseTexture as any)._glTextures = (buffer.baseTexture as any)._glTextures;\n\t\t        (rt.baseTexture as any).framebuffer = (buffer.baseTexture as any).framebuffer;\n\t        }\n        }\n\n        destroy() {\n            if (this.renderTexture) {\n                this.renderTexture.destroy();\n                if (this.doubleBuffer) {\n                    this.doubleBuffer[0].destroy(true);\n                    this.doubleBuffer[1].destroy(true);\n                }\n            }\n        }\n    }\n\n    export class Layer extends PIXI.Container {\n        constructor(group: Group = null) {\n            super();\n            if (group != null) {\n                this.group = group;\n                this.zIndex = group.zIndex;\n            } else {\n                this.group = new Group(0, false);\n            }\n            this._tempChildren = this.children;\n        }\n\n        isLayer = true;\n        group: Group = null;\n        _activeChildren: Array<PIXI.DisplayObject> = [];\n        _tempChildren: Array<PIXI.DisplayObject> = null;\n        _activeStageParent: Stage = null;\n        _sortedChildren: Array<PIXI.DisplayObject> = [];\n        _tempLayerParent: Layer = null;\n\n        textureCache: LayerTextureCache;\n        insertChildrenBeforeActive = true;\n        insertChildrenAfterActive = true;\n\n        beginWork(stage: Stage) {\n            const active = this._activeChildren;\n            this._activeStageParent = stage;\n            this.group.foundLayer(stage, this);\n            const groupChildren = this.group._activeChildren;\n            active.length = 0;\n            for (let i = 0; i < groupChildren.length; i++) {\n                groupChildren[i]._activeParentLayer = this;\n                active.push(groupChildren[i]);\n            }\n            groupChildren.length = 0;\n        }\n\n        endWork() {\n            const children = this.children;\n            const active = this._activeChildren;\n            const sorted = this._sortedChildren;\n\n            for (let i = 0; i < active.length; i++) {\n                this.emit(\"display\", active[i])\n            }\n\n            sorted.length = 0;\n            if (this.insertChildrenBeforeActive) {\n                for (let i = 0; i < children.length; i++) {\n                    sorted.push(children[i]);\n                }\n            }\n            for (let i = 0; i < active.length; i++) {\n                sorted.push(active[i]);\n            }\n            if (!this.insertChildrenBeforeActive &&\n                this.insertChildrenAfterActive) {\n                for (let i = 0; i < children.length; i++) {\n                    sorted.push(children[i]);\n                }\n            }\n\n            if (this.group.enableSort) {\n                this.doSort();\n            }\n        }\n\n        get useRenderTexture() {\n            return this.group.useRenderTexture;\n        }\n\n        set useRenderTexture(value: boolean) {\n            this.group.useRenderTexture = value;\n        }\n\n        get useDoubleBuffer() {\n            return this.group.useDoubleBuffer;\n        }\n\n        set useDoubleBuffer(value: boolean) {\n            this.group.useDoubleBuffer = value;\n        }\n\n        get clearColor() {\n            return this.group.clearColor;\n        }\n\n        set clearColor(value: ArrayLike<number>) {\n            this.group.clearColor = value;\n        }\n\n        get sortPriority() {\n            return this.group.sortPriority;\n        }\n\n        set sortPriority(value: number) {\n            this.group.sortPriority = value;\n        }\n\n        getRenderTexture() {\n            if (!this.textureCache) {\n                this.textureCache = new LayerTextureCache(this);\n            }\n            return this.textureCache.getRenderTexture();\n        }\n\n        updateDisplayLayers() {\n\n        }\n\n        /**\n         * you can override this method for this particular layer, if you want\n         */\n        doSort() {\n            this.group.doSort(this, this._sortedChildren);\n        }\n\n        _preRender(renderer: PIXI.Renderer): boolean {\n            if (this._activeParentLayer && this._activeParentLayer != renderer._activeLayer) {\n                return false;\n            }\n\n            if (!this.visible) {\n                this.displayOrder = 0;\n                return false;\n            }\n\n            this.displayOrder = renderer.incDisplayOrder();\n\n            // if the object is not visible or the alpha is 0 then no need to render this element\n            if (this.worldAlpha <= 0 || !this.renderable) {\n                return false;\n            }\n\n            // we are making a hack with swapping children, it can go wrong easily\n            // this is special \"recover\" if that allows stage to recover just after failed frame\n\n            if (this.children !== this._sortedChildren &&\n                this._tempChildren != this.children) {\n                this._tempChildren = this.children;\n            }\n\n            //just a temporary feature - getBounds() for filters will work with that\n            //TODO: make a better hack for getBounds()\n\n            (this as any)._boundsID++;\n            (this as any).children = this._sortedChildren;\n\n            this._tempLayerParent = renderer._activeLayer;\n            renderer._activeLayer = this;\n            return true;\n        }\n\n        _postRender(renderer: PIXI.Renderer) {\n            (this as any).children = this._tempChildren;\n            renderer._activeLayer = this._tempLayerParent;\n            this._tempLayerParent = null;\n        }\n\n        render(renderer: PIXI.Renderer) {\n            if (!this._preRender(renderer)) {\n                return;\n            }\n\n            if (this.group.useRenderTexture) {\n                if (!this.textureCache) {\n                    this.textureCache = new LayerTextureCache(this);\n                }\n                this.textureCache.pushTexture(renderer);\n            }\n\n            this.containerRenderWebGL(renderer);\n            this._postRender(renderer);\n\n            if (this.group.useRenderTexture) {\n                this.textureCache.popTexture(renderer);\n            }\n        }\n\n        destroy(options?: any) {\n            if (this.textureCache) {\n                this.textureCache.destroy();\n                this.textureCache = null;\n            }\n            super.destroy(options);\n        }\n    }\n\n    (Layer.prototype as any).renderCanvas = function(renderer: PIXI.CanvasRenderer) {\n        if (this._preRender(renderer)) {\n            this.containerRenderCanvas(renderer);\n            this._postRender(renderer);\n        }\n    }\n}\n","//TODO: add maxDisplayOrder for displayObjects and use it to speed up the interaction here\n\n/**\n * @mixin\n */\n\nnamespace pixi_display {\n    import DisplayObject = PIXI.DisplayObject;\n    import Point = PIXI.Point;\n    import Graphics = PIXI.Graphics;\n    import Container = PIXI.Container;\n    import InteractionEvent = PIXI.InteractionEvent;\n\n    export class LayersTreeSearch {\n        _tempPoint = new Point();\n        _queue = [[] as Array<DisplayObject>, [] as Array<DisplayObject>];\n        _eventDisplayOrder = 0;\n        worksWithDisplay = true;\n\n        recursiveFindHit(point: Point, displayObject: DisplayObject, hitTestOrder: number, interactive: boolean, outOfMask: boolean): number {\n            if (!displayObject || !displayObject.visible) {\n                return 0;\n            }\n\n            let hit = 0,\n                interactiveParent = interactive = displayObject.interactive || interactive;\n\n            // if the displayobject has a hitArea, then it does not need to hitTest children.\n            if (displayObject.hitArea) {\n                interactiveParent = false;\n            }\n\n            if (displayObject._activeParentLayer) {\n                outOfMask = false;\n            }\n\n            // it has a mask! Then lets hit test that before continuing..\n            const mask: Graphics = (displayObject as any)._mask;\n            if (hitTestOrder < Infinity && mask) {\n                if (!mask.containsPoint(point)) {\n                    outOfMask = true;\n                }\n            }\n\n            // it has a filterArea! Same as mask but easier, its a rectangle\n            if (hitTestOrder < Infinity && displayObject.filterArea) {\n                if (!displayObject.filterArea.contains(point.x, point.y)) {\n                    outOfMask = true;\n                }\n            }\n\n            // ** FREE TIP **! If an object is not interactive or has no buttons in it\n            // (such as a game scene!) set interactiveChildren to false for that displayObject.\n            // This will allow pixi to completely ignore and bypass checking the displayObjects children.\n            const children: Array<DisplayObject> = (displayObject as Container).children;\n            if ((displayObject as Container).interactiveChildren && children) {\n                for (let i = children.length - 1; i >= 0; i--) {\n                    const child = children[i];\n\n                    // time to get recursive.. if this function will return if something is hit..\n                    const hitChild = this.recursiveFindHit(point, child, hitTestOrder, interactiveParent, outOfMask);\n                    if (hitChild) {\n                        // its a good idea to check if a child has lost its parent.\n                        // this means it has been removed whilst looping so its best\n                        if (!child.parent) {\n                            continue;\n                        }\n\n                        hit = hitChild;\n                        hitTestOrder = hitChild;\n                    }\n                }\n            }\n\n            // no point running this if the item is not interactive or does not have an interactive parent.\n            if (interactive) {\n                if (!outOfMask) {\n                    // if we are hit testing (as in we have no hit any objects yet)\n                    // We also don't need to worry about hit testing if once of the displayObjects children has already been hit!\n                    if (hitTestOrder < displayObject.displayOrder) {\n                        //pixi v4\n                        if (displayObject.hitArea) {\n                            displayObject.worldTransform.applyInverse(point, this._tempPoint);\n                            if (displayObject.hitArea.contains(this._tempPoint.x, this._tempPoint.y)) {\n                                hit = displayObject.displayOrder;\n                            }\n                        } else if ((displayObject as any).containsPoint) {\n                            if ((displayObject as any).containsPoint(point)) {\n                                hit = displayObject.displayOrder;\n                            }\n                        }\n                    }\n\n                    if (displayObject.interactive) {\n                        this._queueAdd(displayObject, hit === Infinity ? 0 : hit);\n                    }\n                } else {\n                    if (displayObject.interactive) {\n                        this._queueAdd(displayObject, 0);\n                    }\n                }\n            }\n\n            return hit;\n        }\n\n        findHit(strangeStuff: InteractionEvent | Point, displayObject: DisplayObject, func: Function, hitTest: boolean)\n        {\n            let interactionEvent: InteractionEvent = null;\n            let point: Point = null;\n            if ((strangeStuff as InteractionEvent).data &&\n                (strangeStuff as InteractionEvent).data.global) {\n                interactionEvent = strangeStuff as InteractionEvent;\n                point = interactionEvent.data.global;\n            } else {\n                point = strangeStuff as Point;\n            }\n            this._startInteractionProcess();\n            this.recursiveFindHit(point, displayObject, hitTest ? 0 : Infinity, false, false);\n            this._finishInteractionProcess(interactionEvent, func);\n        }\n\n        _startInteractionProcess() {\n            //move it to constructor\n            this._eventDisplayOrder = 1;\n            if (!this._queue) {\n                //move it to constructor\n                this._queue = [[], []];\n            }\n            this._queue[0].length = 0;\n            this._queue[1].length = 0;\n        }\n\n        _queueAdd(displayObject: DisplayObject, order: number) {\n            let queue = this._queue;\n            if (order < this._eventDisplayOrder) {\n                queue[0].push(displayObject);\n            } else {\n                if (order > this._eventDisplayOrder) {\n                    this._eventDisplayOrder = order;\n                    let q = queue[1];\n                    for (let i = 0, l = q.length; i < l; i++) {\n                        queue[0].push(q[i]);\n                    }\n                    queue[1].length = 0;\n                }\n                queue[1].push(displayObject);\n            }\n        }\n        _finishInteractionProcess(event: InteractionEvent, func: Function) {\n            let queue = this._queue;\n            let q = queue[0];\n            for (var i = 0, l = q.length; i < l; i++) {\n                if (event) {\n                    //v4.3\n                    if (func) {\n                        func(event, q[i], false);\n                    }\n                } else {\n                    //old\n                    func(q[i], false);\n                }\n            }\n            q = queue[1];\n            for (var i = 0, l = q.length; i < l; i++) {\n                if (event) {\n                    //v4.3\n                    if (!event.target) {\n                        event.target = q[i];\n                    }\n                    if (func) {\n                        func(event, q[i], true);\n                    }\n                } else {\n                    //old\n                    func(q[i], true);\n                }\n            }\n        }\n    }\n}\n","namespace pixi_display {\n    import DisplayObject = PIXI.DisplayObject;\n    import Container = PIXI.Container;\n\n    /**\n     * Container for layers\n     *\n     */\n    export class Stage extends Layer {\n        constructor() {\n            super();\n        }\n\n        static _updateOrderCounter: number = 0;\n\n        isStage = true;\n\n        _tempGroups: Array<DisplayObject> = [];\n\n        /**\n         * Found layers\n         */\n        _activeLayers: Array<Layer> = [];\n\n        _activeParentStage: Stage = null;\n\n        /**\n         * clears all display lists that were used in last rendering session\n         * please clear it when you stop using this displayList, otherwise you may have problems with GC in some cases\n         */\n        clear() {\n            this._activeLayers.length = 0;\n            this._tempGroups.length = 0;\n        }\n\n        destroy(options?: any) {\n            this.clear();\n            super.destroy(options);\n        }\n\n        /**\n         *\n         * @param displayObject {PIXI.DisplayObject} container that we are adding to Stage\n         * @private\n         */\n        _addRecursive(displayObject: DisplayObject) {\n            if (!displayObject.visible) {\n                return;\n            }\n\n            if ((displayObject as any).isLayer) {\n                const layer = displayObject as any as Layer;\n                this._activeLayers.push(layer);\n                layer.beginWork(this);\n            }\n\n            if (displayObject != this && (displayObject as any).isStage) {\n                const stage = displayObject as Stage;\n                stage.updateAsChildStage(this);\n                return;\n            }\n\n            // sometimes people put UNDEFINED in parentGroup or parentLayer\n            // that's why there is != instead of !==\n\n            let group = displayObject.parentGroup;\n            if (group != null) {\n                group.addDisplayObject(this, displayObject);\n            }\n            const layer = displayObject.parentLayer;\n            if (layer != null) {\n                group = layer.group;\n                group.addDisplayObject(this, displayObject);\n            }\n\n            displayObject.updateOrder = ++Stage._updateOrderCounter;\n            if (displayObject.alpha <= 0 || !displayObject.renderable\n                || !displayObject.layerableChildren\n                || group && group.sortPriority) {\n                return;\n            }\n\n            const children = (displayObject as Container).children;\n            if (children && children.length) {\n                for (let i = 0; i < children.length; i++) {\n                    this._addRecursive(children[i]);\n                }\n            }\n        }\n\n        _addRecursiveChildren(displayObject: DisplayObject) {\n            if (displayObject.alpha <= 0 || !displayObject.renderable\n                || !displayObject.layerableChildren) {\n                return;\n            }\n            const children = (displayObject as Container).children;\n            if (children && children.length) {\n                for (let i = 0; i < children.length; i++) {\n                    this._addRecursive(children[i]);\n                }\n            }\n        }\n\n        _updateStageInner() {\n            this.clear();\n            this._addRecursive(this);\n            const layers = this._activeLayers;\n\n            for (let i = 0; i < layers.length; i++) {\n                const layer = layers[i];\n                if (layer.group.sortPriority) {\n                    layer.endWork();\n                    const sorted = layer._sortedChildren;\n                    for (let j = 0; j < sorted.length; j++) {\n                        this._addRecursiveChildren(sorted[j]);\n                    }\n                }\n            }\n\n            for (let i = 0; i < layers.length; i++) {\n                const layer = layers[i];\n                if (!layer.group.sortPriority) {\n                    layer.endWork();\n                }\n            }\n        }\n\n        updateAsChildStage(stage: Stage) {\n            this._activeParentStage = stage;\n            Stage._updateOrderCounter = 0;\n            this._updateStageInner();\n        }\n\n        updateStage() {\n            this._activeParentStage = null;\n            Group._layerUpdateId++;\n            this._updateStageInner();\n        };\n    }\n}\n","declare namespace PIXI {\n    interface Renderer {\n        _activeLayer?: pixi_display.Layer\n        _renderSessionId?: number\n        _lastDisplayOrder?: number\n        CONTEXT_UID?: number\n        incDisplayOrder?(): number\n    }\n    interface CanvasRenderer {\n        _activeLayer?: pixi_display.Layer\n        _renderSessionId?: number\n        _lastDisplayOrder?: number\n        incDisplayOrder?(): number\n    }\n}\n\nnamespace pixi_display {\n    (Object as any).assign(PIXI.Renderer.prototype, {\n        _lastDisplayOrder: 0,\n        _activeLayer: null,\n\n        incDisplayOrder() {\n            return ++this._lastDisplayOrder;\n        },\n\n        _oldRender: PIXI.Renderer.prototype.render,\n\n        render(displayObject: PIXI.DisplayObject, renderTexture?: PIXI.RenderTexture, clear?: boolean, transform?: PIXI.Transform, skipUpdateTransform?: boolean) {\n            if (!renderTexture) {\n                this._lastDisplayOrder = 0;\n            }\n            this._activeLayer = null;\n            if ((displayObject as Stage).isStage) {\n                (displayObject as Stage).updateStage()\n            }\n            patchInteractionManager(this.plugins.interaction);\n            this._oldRender(displayObject, renderTexture, clear, transform, skipUpdateTransform);\n        }\n    });\n\n    let canvasRenderer = (PIXI as any).CanvasRenderer;\n    if (canvasRenderer) {\n        (Object as any).assign(canvasRenderer.prototype, {\n            _lastDisplayOrder: 0,\n            _activeLayer: null,\n\n            incDisplayOrder() {\n                return ++this._lastDisplayOrder;\n            },\n\n            _oldRender: canvasRenderer.prototype.render,\n\n            render(displayObject: PIXI.DisplayObject, renderTexture?: PIXI.RenderTexture, clear?: boolean, transform?: PIXI.Transform, skipUpdateTransform?: boolean) {\n                if (!renderTexture) {\n                    this._lastDisplayOrder = 0;\n                }\n                this._activeLayer = null;\n                if ((displayObject as Stage).isStage) {\n                    (displayObject as Stage).updateStage()\n                }\n                patchInteractionManager(this.plugins.interaction);\n                this._oldRender(displayObject, renderTexture, clear, transform, skipUpdateTransform);\n            }\n        });\n    }\n}\n","/// <reference types=\"pixi.js\" />\n\nnamespace pixi_display {\n\t(PIXI as any).display = pixi_display;\n}\n\ndeclare module \"pixi-layers\" {\n\texport = pixi_display;\n}\n"]}